client.subjectID=<<rabbitmq_user>>
client.accessToken=<<rabbitmq_psw>>
client.portNumber=<<rabbitmq_port>>
client.host=<<rabbitmq_ip>>
client.vhost=<<rabbitmq_vhost>>
client.destinationName=<<rabbitmq_dest>>
client.exchange=<<rabbitmq_exchange>>
client.queue=<<rabbitmq_queue>>
client.pattern=<<rabbitmq_routingKey>>
client.tls=false

##### EXTRA PUBLISHING SETTINGS #####
maxRnd=20
minRnd=10
#in ms
delay=62
px_data=10

##### DATA SOURCE (encrypt data) #####
#app runs the cp-abe version (without AES)
client.cpabe=false
#app runs our new approach (CP-ABE/AES)
client.cph=true

#number of messages to refresh the symmetric key. By default, it is not used
#client.refresh=4
#if this parameter is true, the new key is calculated before the current key expires
client.anticipated_key=false
#number of seconds to calculate the next symmetric key
client.anticipated_key_seconds=3
#key type
client.alg=ECDH-ES
client.enc=A128GCM
client.kty=EC
client.crv=P-256

client.proxy_ip=<<abeProxy_ip>>
client.proxy_port=<<abeProxy_port>>
client.proxy_id=<<abeProxy_id>>

client.policy=att1:val1 att2:val2 2of2 att3:val3 2of2

#storage parameters
client.storage_type=database
client.db_ip=89.207.106.75
client.db_port=2480
client.db_auth_user=<<db_user>>
client.db_auth_pwd=<<db_user>>
client.db_database=<<db_name>>
client.db_table=<<table_name>>

##### DATA CONSUMER (decrypt data) #####
consumer.public_params=<<keys_path>>/pub_10
consumer.cpabe_priv_key=<<keys_path>>/key_10